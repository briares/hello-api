name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GCP_PROJECT_ID: savvy-arbor-367908

jobs:
  test:
    needs:
      - format-check
      - lint
    name: Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Run Test
      run: make test #
    - name: Coverage Check
      run: make coverage #
    - name: Generate Report
      run: make report #
    - name: Copy Files
      run: |
           mkdir  reports
           cp cover.html reports/.
    - name: Archive #
      uses: actions/upload-artifact@v2
      with:
          name: reports
          path: reports
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Run Format Check
      run: make check-format
  lint:
      name: Lint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Lint
          uses: golangci/golangci-lint-action@v2  #

  build:
    name: Build App
    runs-on: ubuntu-latest #
    steps:

    - name: Set up Go 1.x #
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory #
      uses: actions/checkout@v2

    - name: Build
      run: make build #

    - name: Copy Files #
      run: |
           mkdir artifacts
           cp api artifacts/.

    - name: Archive #
      uses: actions/upload-artifact@v2
      with:
          name: api #
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary # <4>
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Deploy function
      id: deploy
      uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: translate
        entry_point: Translate
        runtime: go116
        credentials: ${{ secrets.gcp_credentials }}
    - id: test
      run: curl "${{ steps.deploy.outputs.url }}/hello"
  deploy-paas:
      name: Deploy PaaS
      runs-on: ubuntu-latest
      needs: test
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} 
      steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy App
        id: deploy
        uses: google-github-actions/deploy-appengine@main
        with:
          credentials: ${{ secrets.gcp_credentials }}
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"     
  containerize-buildpack:
    name: Build Container buildpack
    runs-on: ubuntu-latest #
    needs: test #<6>
    steps:
    - name: Check out code into the Go module directory #
      uses: actions/checkout@v2
    - name: Install Pack
      run: (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.21.1/pack-v0.21.1-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)
    - name: Build
      run: pack build gcr.io/${{ env.GCP_PROJECT_ID }}/hello-api:latest --builder gcr.io/buildpacks/builder:v1
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@main
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.gcp_credentials }}
        export_default_credentials: true
    - name: Configure Docker
      run: gcloud auth configure-docker --quiet
    - name: Push Docker image
      run: docker push gcr.io/${{ env.GCP_PROJECT_ID }}/hello-api:latest
    - name: Log in to the GHCR
      uses: docker/login-action@master
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Tag for Github
      run: docker image tag gcr.io/${{ env.GCP_PROJECT_ID }}/hello-api:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    - name: Push Docker image to GCP
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  deploy-container:
   name: Deploy Container buildpack
   runs-on: ubuntu-latest
   needs: containerize-buildpack
   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
    - name: Deploy to CaaS
      id: deploy
      uses: google-github-actions/deploy-cloudrun@main
      with:
        service: translate
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-api:latest
        credentials: ${{ secrets.gcp_credentials }}
    - id: test
      run: curl "${{ steps.deploy.outputs.url }}/hello"      